#!/usr/bin/env python

"""
  Calculates the zero-contour values from a set of data
"""

import sys
import numpy as np
from scipy.interpolate import griddata
import matplotlib.pyplot as plt


# Set other useful parameters
ncontours = 75
nmeshpts = 50

# Read data from energy file
inputfilename = sys.argv[1]
with open(inputfilename,'r') as infile:
  data = infile.readlines()

# allowed x and y vals
xallow = list(np.arange(1.4, 2.5, 0.1))
yallow = list(np.arange(92.0, 180.0, 2.0))

# Put content of input file into various list to be altered later.
x, y, z1, z2 = [], [], [], []
for i in range(1,len(data)):
  if '#' not in data[i].strip():
    tmp = data[i].strip().split()
    for xval in xallow:
        if np.isclose(float(tmp[0]), xval, atol=1.e-3):
            for yval in yallow:
                if np.isclose(float(tmp[1]), yval, atol=1.e-3):
                    x.append(float(tmp[0]))
                    y.append(float(tmp[1]))
                    z1.append(float(tmp[2]))
                    z2.append(float(tmp[3]))

# Get relative energies
z2rel = []
for i in range(len(z2)):
  z2rel.append((z2[i] - min(z2))*627.5095)

# Obtain the grids for plotting
xg, yg = buildmesh(x, y, nmeshpts)
zg = buildgrid(x, y, z, xg, yg)

# Get interpolated values along seam using griddata
xc, yc = determine_zero_contour_pts(xg, yg, zg, ncontours) 
zc = interp_zero_contour_vals_gd(x, y, z, xc, yc): 

# Write the (x, y, z) points interpolated by griddata to a file
write_gd_interp_files(xc, yc, zc)
