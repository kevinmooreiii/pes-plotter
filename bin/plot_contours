#!/usr/bin/env python
"""
Plots Contours for potnential energy surface mapping
"""

__authors__ = "Kevin Moore"
__updated__ = "2019-01-31"


import matplotlib.pyplot as plt
import matplotlib.mlab as mlab
import matplotlib.cm as cm
import matplotlib.colors
from mpl_toolkits.mplot3d import Axes3D
import pyparsing
import numpy as np
import sys
from scipy.interpolate import griddata

inputfilename = sys.argv[1]
outputfilename = sys.argv[2]

with open(inputfilename,'r') as infile:
  data = infile.readlines()

# Put content of input file into various list to be altered later.
x = []
y = []
z1 = []
z2 = []
z3 = []
for i in range(1,len(data)):
  if '#' not in data[i].strip():
    tmp = data[i].strip().split()
    if tmp[3] != '0.000':
      x.append(float(tmp[1]))
      y.append(float(tmp[2]))
      z1.append(float(tmp[3]))
      z2.append(float(tmp[4]))
      z3.append(float(tmp[5]))

z2rel = []
for i in range(len(z2)):
  z2rel.append((z2[i] - min(z2))*627.5095)
z3rel = []
for i in range(len(z3)):
  z3rel.append((z3[i] - min(z3))*627.5095)

xi = np.linspace(min(x),max(x))
yi = np.linspace(min(y),max(y))
xg, yg = np.meshgrid(xi,yi)

xyarr = np.array( list( zip(x,y) ) ) 
z1arr = np.array( z1 )
z2arr = np.array( z2rel )
z3arr = np.array( z3rel )


z1g = griddata(xyarr, z1arr, (xg,yg), method='cubic')
z2g = griddata(xyarr, z2arr, (xg,yg), method='cubic')
z3g = griddata(xyarr, z3arr, (xg,yg), method='cubic')

# Adjust cmap for easy visulazion of seem
cmap = cm.get_cmap('seismic')
shifted_cmap = shiftedColorMap(cmap, midpoint=0.315, name='shifted')

# Set number of contours
ncontours = 75

# Create plot
fig = plt.figure()

#### Create subplot for difference potential ###
af = fig.add_subplot(111)

# Set titles and axes labels
af.set_title('Difference Potential for Triplet/Singlet')
af.set_xlabel('N--O Distance (Ang.)')
af.set_ylabel('N-N-O Angle (Deg.)')

# Plot the contours for the difference potential
#afcontour = af.contour(xg, yg, z1g, ncontours, cmap=shifted_cmap)
afcontourf = af.contourf(xg, yg, z1g, ncontours, cmap=shifted_cmap)

# Plot the colorbars
#afpcolor = af.pcolor(xg, yg, z1g, cmap = shifted_cmap)
#cbar1 = plt.colorbar(afpcolor, orientation='horizontal', shrink=0.8)
#cbar1.set_label('E(trip)-E(sing) (kcal/mol)')

# Plot the triplet contours
bfcontour = af.contour(xg, yg, z2g, ncontours, colors='black')

# Place points for various points of interest; place legend for these points
af.plot([1.45945826],[118.55168496], color='green', marker='o', markersize=14, label='T-SP')
#af.plot([],[], color='green', marker='o', markersize=14, label='S-SP')
#af.plot([],[], color='green', marker='o', markersize=14, label='MSX')
af.legend(loc="lower left", fontsize=20, markerscale=1.5, framealpha=1.0)

# Create subplot for triplet
#bf = fig.add_subplot(132)
#bf.set_title('Triplet Potential Energy Surface')
#bf.set_xlabel('N--O Distance (Ang.)')
#bf.set_ylabel('N-N-O Angle (Deg.)')
#bfcontour = bf.contour(xg, yg, z2g, ncontours, colors='black')
#bfcontourf = bf.contourf(xg, yg, z2g, ncontours, cmap=shifted_cmap)
#bfpcolor = bf.pcolor(xg, yg, z2g)
#cbar2 = plt.colorbar(bfpcolor, orientation='horizontal', shrink=0.8)
#cbar2.set_label('Relative Energy (kcal/mol)')

# Create subplot for singlet
#cf = fig.add_subplot(122)
#cf.set_title('Singlet Potential Energy Surface')
#cf.set_xlabel('N--O Distance (Ang.)')
#cf.set_ylabel('N-N-O Angle (Deg.)')
#cfcontour = cf.contour(xg, yg, z3g, ncontours, colors='black')
#cfcontourf = cf.contourf(xg, yg, z3g, ncontours, cmap=shifted_cmap)
#cfpcolor = cf.pcolor(xg, yg, z3g)
#cbar3 = plt.colorbar(cfpcolor, orientation='horizontal', shrink=0.8)
#cbar3.set_label('Relative Energy (kcal/mol)')

fig.set_size_inches(16,9)
fig.savefig(outputfilename,dpi=300)

