#!/usr/bin/env python
"""
Plots Contours for potnential energy surface mapping
"""

__authors__ = "Kevin Moore"
__updated__ = "2019-01-31"


import matplotlib.pyplot as plt
import matplotlib.mlab as mlab
import matplotlib.cm as cm
import matplotlib.colors
from mpl_toolkits.mplot3d import Axes3D
import pyparsing
import numpy as np
import sys
from scipy.interpolate import griddata

# Open input file to get info
with open('input.dat', 'r') as infile:
  for line in infile:
    get the names of the files with the contour data
    maybe get an index to figure out if they go on the same plot

plot_list


# Plot each of the graphs

for file in plot_list:

    # Open the file
    with open(inputfilename,'r') as infile:
        data = infile.readlines()

    # Put content of input file into various list to be altered later.
    x, y, z = [], [], []
    for i in range(1,len(data)):
        if '#' not in data[i].strip():
            tmp = data[i].strip().split()
            x.append(float(tmp[1]))
            y.append(float(tmp[2]))
            z.append(float(tmp[3]))


    # Get the points to plot
    xi = np.linspace(min(x),max(x))
    yi = np.linspace(min(y),max(y))
    xg, yg = np.meshgrid(xi,yi)
    xyarr = np.array( list( zip(x,y) ) ) 
    z1arr = np.array( z1 )
    z1g = griddata(xyarr, z1arr, (xg,yg), method='cubic')

    # Adjust cmap for easy visulazion of seem
    cmap = cm.get_cmap('seismic')
    shifted_cmap = shiftedColorMap(cmap, midpoint=0.315, name='shifted')

    # Set number of contours
    ncontours = 75

    # Create plot
    fig = plt.figure()

    af = fig.add_subplot(111)

    # Set titles and axes labels
    af.set_title(plot_title)
    af.set_xlabel(plot_xlabel)
    af.set_ylabel(plot_ylabel)

    # Plot the contours for the difference potential
    if clines is True:
        #afcontour = af.contour(xg, yg, z1g, ncontours, )
    if cfill is True:
        afcontourf = af.contourf(xg, yg, z1g, ncontours, cmap=plot_cmap)
        #afpcolor = af.pcolor(xg, yg, z1g, cmap = shifted_cmap)
        #cbar1 = plt.colorbar(afpcolor, orientation='horizontal', shrink=0.8)
        #cbar1.set_label('E(trip)-E(sing) (kcal/mol)')

# Plot the triplet contours
bfcontour = af.contour(xg, yg, z2g, ncontours, colors='black')

# Place points for various points of interest; place legend for these points
af.plot([1.45945826],[118.55168496], color='green', marker='o', markersize=14, label='T-SP')
#af.plot([],[], color='green', marker='o', markersize=14, label='S-SP')
#af.plot([],[], color='green', marker='o', markersize=14, label='MSX')
af.legend(loc="lower left", fontsize=20, markerscale=1.5, framealpha=1.0)

fig.set_size_inches(16,9)
fig.savefig(outputfilename,dpi=300)

